@model UPBEats.Models.Usuario
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery
@{
    var token = antiforgery.GetAndStoreTokens(Context).RequestToken;
}

@{
    ViewData["Title"] = "Perfil";
}

<section class="page-section">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="card shadow mb-4">
                    <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                        <h5 class="m-0 font-weight-bold text-primary">@Html.DisplayFor(modeItem => Model.NombreCompleto)</h5>
                        <div class="dropdown no-arrow">
                            <button class="btn btn-sm" onclick="btnFavorito(@UPBEats.Controllers.HomeController.getUsuario.Id,@Model.Id,true)">
                                @if (UPBEats.Controllers.UsuariosController.IsVendedorFavorito(@UPBEats.Controllers.HomeController.getUsuario.Id, Model.Id))
                                {
                                    <i class="fas fa-heart fa-2x text-primary" id="iconFavorito"></i>
                                }
                                else
                                {
                                    <i class="fas fa-heart fa-2x text-secondary" id="iconFavorito"></i>
                                }
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-lg-4 text-center justify-content-center">
                                <img class="rounded-circle" id="imgFoto" src="data:image/jpg;base64, @Convert.ToBase64String(Model.Foto)" width="100" height="100" alt="" />
                            </div>
                            <div class="col-lg-8">
                                <div class="col-md-12 text-center">
                                    <p>@Html.DisplayFor(Usuario => Usuario.Emprendimiento)</p>
                                    <hr class="divider my-3" />
                                </div>
                                <div class="col-md-12 text-center">
                                    <p>@Html.DisplayFor(Usuario => Usuario.DescEmprendimiento)</p>
                                </div>
                                <div class="col-md-12 text-center text-muted">
                                    @if (Model.NumeroProductos == 0)
                                    {
                                        <p>
                                            Este vendedor aún no ha publicado productos
                                            <i class="fas fa-cubes text-muted"></i>
                                        </p>
                                    }
                                    else
                                    {
                                        <p>
                                            Este vendedor ha publicado @Model.NumeroProductos productos
                                            <i class="fas fa-cubes text-muted"></i>
                                        </p>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Mostramos la tarjeta de productos sólo si el vendedor tiene productos ya publicados-->
            @if (Model.NumeroProductos > 0)
            {
                @foreach (var item in Model.Productos)
                {
                    <div class="col-lg-6">
                        <div class="card shadow mb-4">
                            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                                <a class="m-0 font-weight-bold text-primary" asp-controller="Productos" asp-action="Details" asp-route-id="@item.Id">@Html.DisplayFor(modeItem => item.Nombre)</a>
                                <div class="dropdown no-arrow">
                                    <button class="btn btn-sm" onclick="btnFavorito(@UPBEats.Controllers.HomeController.getUsuario.Id,@item.Id, false)">
                                        @if (UPBEats.Controllers.ProductosController.IsProductoFavorito(@UPBEats.Controllers.HomeController.getUsuario.Id, item.Id))
                                        {
                                            <i class="fas fa-heart fa-2x text-primary" id="iconFavorito-@item.Id"></i>
                                        }
                                        else
                                        {
                                            <i class="fas fa-heart fa-2x text-secondary" id="iconFavorito-@item.Id"></i>
                                        }
                                    </button>
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <!--Campos a la izquierda-->
                                    <div class="col-lg-8">
                                        <div class="row">
                                            <div class="col-md-12 text-center">
                                                <p>@Html.DisplayFor(modeItem => item.Descripcion)</p>
                                                <hr class="divider my-3" />
                                                <p>$ @Html.DisplayFor(modeItem => item.Precio)</p>
                                            </div>
                                        </div>
                                    </div>
                                    <!--Foto a la Derecha-->
                                    <div class="col-lg-4 text-center justify-content-center">
                                        <img class="rounded" id="imgFoto" src="data:image/jpg;base64, @Convert.ToBase64String(item.Foto)" width="100" height="100" alt="Producto" />
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 text-center text-muted">
                                        @if (item.Disponible)
                                        {
                                            <p>
                                                Disponible
                                                <i class="fas fa-smile text-muted"></i>
                                            </p>
                                        }
                                        else
                                        {
                                            <p>
                                                Agotado
                                                <i class="fas fa-frown text-muted"></i>
                                            </p>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</section>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

<script>
        //Funcion para agregar/eliminar de favoritos
    function btnFavorito(usuarioId, elementoId, vendedor) {
        if (vendedor) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("Favorito", "VendedorFavoritos")',
                data: { CompradorId: usuarioId, VendedorId: elementoId, __RequestVerificationToken: '@token'}
            }).done(function () {
                if ($('#iconFavorito').hasClass('text-primary')) {
                    $('#iconFavorito').removeClass('text-primary');
                    $('#iconFavorito').addClass('text-secondary');
                }
                else {
                    $('#iconFavorito').removeClass('text-secondary');
                    $('#iconFavorito').addClass('text-primary');
                }

            });
        }
        else {
            $.ajax({
                type: "POST",
                url: '@Url.Action("Favorito", "ProductoFavoritos")',
                data: { UsuarioId: usuarioId, ProductoId: elementoId, __RequestVerificationToken: '@token' }
            }).done(function () {
                if ($('#iconFavorito-' + elementoId).hasClass('text-primary')) {
                    $('#iconFavorito-' + elementoId).removeClass('text-primary');
                    $('#iconFavorito-' + elementoId).addClass('text-secondary');
                }
                else {
                    $('#iconFavorito-' + elementoId).removeClass('text-secondary');
                    $('#iconFavorito-' + elementoId).addClass('text-primary');
                }

            });
        }

    }
</script>
}